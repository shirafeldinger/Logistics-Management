{"version":3,"sources":["Components/Home.jsx","Components/Signup.jsx","Components/LogIn.jsx","Components/Manager.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","id","className","to","Signup","props","useState","name","setName","number","setNumber","forklift","setForklift","numberIsValid","setNumberIsValid","nameIsValid","setNameIsValid","type","onChange","e","target","value","length","document","getElementById","innerHTML","test","checked","onClick","AddEmployee","alert","LogIn","employeeNum","setEmployeeNum","flag","setFlag","loggedInEmployee","employees","find","em","Number","showManager","matchEmployee","employee","loginEmployee","checkEmployee","fullName","products","filter","p","handlingEmployee","map","product","key","productNumber","Name","needForklift","toString","setHandlingEmployee","Manager","logins","loginCount","reduce","acc","empNum","handlingCount","emp","countLogins","countProducts","calcTable","App","setLoginEmployee","setEmployee","setLogin","setProducts","addEmployee","employeeName","employeeNumber","forkliftValue","isPresent","loginEmplyee","index","findIndex","slice","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a56c2e94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div id=\"home\">\r\n      <h2 id=\"headline\">Logistics Management</h2>\r\n      <div id=\"home-buttons\">\r\n        {\" \"}\r\n        <Link className=\"home-link\" to=\"/signup\">\r\n          Sign up\r\n        </Link>\r\n        <Link className=\"home-link\" to=\"/login\">\r\n          Log in\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SignUp.css\";\r\n\r\nexport default function Signup(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [forklift, setForklift] = useState(\"no\");\r\n  const [numberIsValid, setNumberIsValid] = useState(false);\r\n  const [nameIsValid, setNameIsValid] = useState(false);\r\n  return (\r\n    <div id=\"SignUp\">\r\n      <h2>Sign up</h2>\r\n      <div id=\"NO\">\r\n        <label>Employee Number:</label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            if (e.target.value.length !== 5) {\r\n              document.getElementById(\"p-number\").innerHTML =\r\n                \"the number must be with 5 digits.\";\r\n            } else {\r\n              document.getElementById(\"p-number\").innerHTML = \"\";\r\n              setNumberIsValid(true);\r\n            }\r\n            setNumber(e.target.value);\r\n          }}\r\n        />\r\n        <p className=\"signup-p\" id=\"p-number\"></p>\r\n      </div>\r\n\r\n      <div id=\"full-name\">\r\n        {\" \"}\r\n        <label>Full name:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            if (\r\n              !/^[A-Za-z]+/.test(e.target.value) ||\r\n              e.target.value.length < 4\r\n            ) {\r\n              document.getElementById(\"p-name\").innerHTML =\r\n                \"the name must contain minimum 4 characters. \";\r\n            } else {\r\n              document.getElementById(\"p-name\").innerHTML = \"\";\r\n              setNameIsValid(true);\r\n            }\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <p className=\"signup-p\" id=\"p-name\"></p>\r\n      </div>\r\n\r\n      <div id=\"forklift\">\r\n        <label>Forklift truck</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"radio\"\r\n          value=\"yes\"\r\n          onChange={(e) => {\r\n            setForklift(e.target.value);\r\n          }}\r\n        />\r\n        <label>Yes</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"radio\"\r\n          checked=\"checked\"\r\n          value=\"no\"\r\n          onChange={(e) => {\r\n            setForklift(e.target.value);\r\n          }}\r\n        />\r\n        <label>No</label>\r\n      </div>\r\n\r\n      <div id=\"sign-up-buttons\">\r\n        <button\r\n          className=\"buttons\"\r\n          onClick={() => {\r\n            if (numberIsValid === true && nameIsValid === true) {\r\n              props.AddEmployee(name, number, forklift);\r\n              alert(\"You signed in\");\r\n            } else {\r\n              alert(\"ERROR\");\r\n            }\r\n          }}\r\n        >\r\n          Create\r\n        </button>\r\n\r\n        <Link className=\"buttons\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LogIn.css\";\r\n\r\nexport default function LogIn(props) {\r\n  const [employeeNum, setEmployeeNum] = useState(\"\");\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const checkEmployee = () => {\r\n    let matchEmployee = props.employees.find(\r\n      (employee) => employee.Number === employeeNum\r\n    );\r\n\r\n    if (!matchEmployee) {\r\n      alert(`Employee Number ${employeeNum} doesn't exist`);\r\n    } else {\r\n      props.loginEmployee(matchEmployee.Number);\r\n    }\r\n  };\r\n\r\n  let loggedInEmployee = props.employees.find(\r\n    (em) => em.Number === props.loggedInEmployee\r\n  );\r\n\r\n  const showManager = () => {\r\n    if (flag) {\r\n      return (\r\n        <Link className=\"buttons\" to=\"/manager\">\r\n          manager\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"log-in\">\r\n      <h2>Login</h2>\r\n\r\n      <div id=\"input-div\">\r\n        {\" \"}\r\n        <label>NO:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setEmployeeNum(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      {showManager()}\r\n\r\n      <div id=\"login-buttons\">\r\n        {\" \"}\r\n        <button\r\n          className=\"buttons\"\r\n          onClick={() => {\r\n            if (employeeNum === \"99999\") {\r\n              setFlag(true);\r\n            } else {\r\n              return checkEmployee();\r\n            }\r\n          }}\r\n        >\r\n          Enter\r\n        </button>\r\n        <Link className=\"buttons\" to=\"/\">\r\n          Log out\r\n        </Link>\r\n      </div>\r\n\r\n      {loggedInEmployee && (\r\n        <div>\r\n          <h1>Welcome {loggedInEmployee.fullName}</h1>\r\n          <h4>Details:</h4>\r\n          <p>Full Name : {loggedInEmployee.fullName}</p>\r\n          <p>NO: {loggedInEmployee.Number}</p>\r\n          <p>Forklift truck license: {loggedInEmployee.forklift}</p>\r\n\r\n          <div>\r\n            {\" \"}\r\n            <h2>List of Products:</h2>\r\n            {props.products\r\n              .filter((p) => !p.handlingEmployee)\r\n              .map((product) => {\r\n                return (\r\n                  <div key={product.productNumber} className=\"product-box\">\r\n                    <p>Product Number: {product.productNumber}</p>\r\n                    <p>Name : {product.Name}</p>\r\n                    <p>\r\n                      Need forklift truck: {product.needForklift.toString()}\r\n                    </p>{\" \"}\r\n                    <button\r\n                      className=\"buttons\"\r\n                      onClick={() => {\r\n                        if (\r\n                          product.needForklift &&\r\n                          loggedInEmployee.forklift === \"no\"\r\n                        ) {\r\n                          alert(\"need forklift license\");\r\n                        } else {\r\n                          props.setHandlingEmployee(\r\n                            product.productNumber,\r\n                            loggedInEmployee.Number\r\n                          );\r\n                        }\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Manager.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Manager(props) {\r\n  const calcTable = (logins, employees, products) => {\r\n    let loginCount = logins.reduce((acc, empNum) => {\r\n      acc[empNum] = acc[empNum] || 0;\r\n      acc[empNum]++;\r\n      return acc;\r\n    }, {});\r\n\r\n    let handlingCount = products.reduce((acc, product) => {\r\n      acc[product.handlingEmployee] = acc[product.handlingEmployee] || 0;\r\n      acc[product.handlingEmployee]++;\r\n      return acc;\r\n    }, {});\r\n\r\n    return employees.map((emp) => ({\r\n      ...emp,\r\n      countLogins: loginCount[emp.Number],\r\n      countProducts: handlingCount[emp.Number],\r\n    }));\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    const tableData = calcTable(props.logins, props.employees, props.products);\r\n\r\n    return tableData.map((emp) => (\r\n      <tr key={emp.Number}>\r\n        <td>{emp.Number}</td>\r\n        <td>{emp.fullName}</td>\r\n        <td>{emp.countLogins}</td>\r\n        <td>{emp.countProducts}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div id=\"manager\">\r\n      <h1>Manager</h1>\r\n\r\n      <table id=\"manager-table\">\r\n        <tbody>\r\n          <tr>\r\n            <td>No</td>\r\n            <td>FullName</td>\r\n            <td>Counter</td>\r\n            <td>Number of Products</td>\r\n          </tr>\r\n          {renderTableData()}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Link className=\"buttons\" to=\"/\">\r\n        Log out\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport SignUp from \"./Components/Signup\";\nimport LogIn from \"./Components/LogIn\";\nimport Manager from \"./Components/Manager\";\nfunction App() {\n  const [loggedInEmployee, setLoginEmployee] = useState(0);\n  const [employees, setEmployee] = useState([]);\n  const [logins, setLogin] = useState([]);\n  const [products, setProducts] = useState([\n    {\n      productNumber: 11122,\n      Name: \"green box\",\n      needForklift: false,\n    },\n    {\n      productNumber: 22554,\n      Name: \"green box\",\n      needForklift: false,\n    },\n    {\n      productNumber: 66698,\n      Name: \"blue box\",\n      needForklift: true,\n    },\n    {\n      productNumber: 78544,\n      Name: \"red box\",\n      needForklift: false,\n    },\n    {\n      productNumber: 69875,\n      Name: \"red box\",\n      needForklift: false,\n    },\n  ]);\n\n  const addEmployee = (employeeName, employeeNumber, forkliftValue) => {\n    setEmployee([\n      ...employees,\n      {\n        Number: employeeNumber,\n        fullName: employeeName,\n        forklift: forkliftValue,\n        isPresent: true,\n      },\n    ]);\n  };\n\n  const loginEmplyee = (employeeNum) => {\n    setLoginEmployee(employeeNum);\n    setLogin([...logins, employeeNum]);\n  };\n\n  const setHandlingEmployee = (productNumber, employeeNum) => {\n    const index = products.findIndex((p) => p.productNumber === productNumber);\n    setProducts([\n      ...products.slice(0, index),\n      { ...products[index], handlingEmployee: employeeNum },\n      ...products.slice(index + 1, products.length),\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => {\n              return <Home />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            component={() => {\n              return <SignUp AddEmployee={addEmployee} employees={employees} />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            component={() => {\n              return (\n                <LogIn\n                  employees={employees}\n                  products={products}\n                  setHandlingEmployee={setHandlingEmployee}\n                  loggedInEmployee={loggedInEmployee}\n                  loginEmployee={loginEmplyee}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/manager\"\n            component={() => {\n              return (\n                <Manager\n                  logins={logins}\n                  employees={employees || []}\n                  products={products}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}